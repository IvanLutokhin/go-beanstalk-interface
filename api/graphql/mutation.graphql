extend type Mutation {
    createJob(input: CreateJobInput): CreateJobPayload!
    deleteJob(input: DeleteJobInput): DeleteJobPayload!
    deleteJobs(input: DeleteJobsInput): DeleteJobsPayload!
    kickJob(input: KickJobInput): KickJobPayload!
    kickJobs(input: KickJobsInput): KickJobsPayload!
    pauseTube(input: PauseTubeInput): PauseTubePayload!
}

input CreateJobInput {
    tube: String!
    priority: Int!
    delay: Int!
    ttr: Int!
    data: String!
}

type CreateJobPayload {
    tube: String!
    id: Int!
}

input DeleteJobInput {
    id: Int!
}

type DeleteJobPayload {
    id: Int!
}

input DeleteJobsInput {
    tube: String!
    count: Int
}

type DeleteJobsPayload {
    count: Int!
}

input KickJobInput {
    id: Int!
}

type KickJobPayload {
    id: Int!
}

input KickJobsInput {
    tube: String!
    count: Int
}

type KickJobsPayload {
    count: Int!
}

input PauseTubeInput {
    tube: String!
    delay: Int!
}

type PauseTubePayload {
    tube: String!
}
